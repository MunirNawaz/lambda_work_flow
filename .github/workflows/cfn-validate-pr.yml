name: Validate CloudFormation on PR Workflow

# Trigger the workflow on pull request events that affect files in the 'cloudformation/' directory
on:
  pull_request:
    paths:
      - "cloudformation/**"

# Set permissions for the workflow
permissions:
  pull-requests: write
  contents: read

jobs:
  # Define the job that will validate the CloudFormation template
  validate-cfn:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to the runner
      - uses: actions/checkout@v2

      # Configure AWS credentials using secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # Validate the CloudFormation template
      - name: Validate CloudFormation Template
        run: |
          aws cloudformation validate-template --template-body file://cloudformation/s3-bucket.yml

      # Deploy a test stack using the CloudFormation template
      - name: Deploy Test Stack
        run: |
          stack_name="pr_test_stack-${{ github.event.pull_request.number }}"
          aws cloudformation create-stack --stack-name $stack_name --template-body file://cloudformation/s3-bucket.yml --parameters ParameterKey=Environment,ParameterValue=test

      # Comment on the pull request with the status of the test stack deployment
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `CloudFormation test stack deployed. Stack name: pr_test_stack-${{ github.event.pull_request.number }}`
            })

  # Define the job to clean up resources after the pull request is merged
  cleanup-on-merge:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      # Configure AWS credentials using secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # Delete the test stack created during the pull request process
      - name: Delete Test Stack
        run: |
          stack_name="pr_test_stack-${{ github.event.pull_request.number }}"
          aws cloudformation delete-stack --stack-name $stack_name
